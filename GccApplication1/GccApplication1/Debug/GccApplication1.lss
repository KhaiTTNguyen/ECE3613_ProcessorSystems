
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000784  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000730  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000784  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007b4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000007f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c79  00000000  00000000  00000814  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a0b  00000000  00000000  0000148d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000453  00000000  00000000  00001e98  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  000022ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004f9  00000000  00000000  00002320  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000048  00000000  00000000  00002819  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00002861  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 66 00 	jmp	0xcc	; 0xcc <__ctors_end>
   4:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
   8:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
   c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  10:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  14:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  18:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  1c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  20:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  24:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  28:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  2c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  30:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  34:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  38:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  3c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  40:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  44:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  48:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  4c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  50:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  54:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  58:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  5c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  60:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  64:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  68:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  6c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  70:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  74:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  78:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  7c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  80:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  84:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  88:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  8c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  90:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  94:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  98:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  9c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  a0:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  a4:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  a8:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  ac:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  b0:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  b4:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  b8:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  bc:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  c0:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  c4:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>
  c8:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__bad_interrupt>

000000cc <__ctors_end>:
  cc:	11 24       	eor	r1, r1
  ce:	1f be       	out	0x3f, r1	; 63
  d0:	cf ef       	ldi	r28, 0xFF	; 255
  d2:	d8 e0       	ldi	r29, 0x08	; 8
  d4:	de bf       	out	0x3e, r29	; 62
  d6:	cd bf       	out	0x3d, r28	; 61
  d8:	0e 94 72 00 	call	0xe4	; 0xe4 <main>
  dc:	0c 94 96 03 	jmp	0x72c	; 0x72c <_exit>

000000e0 <__bad_interrupt>:
  e0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e4 <main>:
#define F_CPU 16000000UL// Define CPU frequency for delay.h
#include <util/delay.h>
#define PINB0 0
int main(void)
{
	unsigned char one, eight, nine, zero;
  e4:	cf 93       	push	r28
  e6:	df 93       	push	r29
  e8:	cd b7       	in	r28, 0x3d	; 61
  ea:	de b7       	in	r29, 0x3e	; 62
  ec:	ec 97       	sbiw	r28, 0x3c	; 60
  ee:	0f b6       	in	r0, 0x3f	; 63
  f0:	f8 94       	cli
  f2:	de bf       	out	0x3e, r29	; 62
  f4:	0f be       	out	0x3f, r0	; 63
  f6:	cd bf       	out	0x3d, r28	; 61
	one=0b00000110;
	// two=0b01011011;
  f8:	86 e0       	ldi	r24, 0x06	; 6
  fa:	89 83       	std	Y+1, r24	; 0x01
	// four=0b01100110;
	//five=0b01101101;
	//six=0b01111100;
	// seven=0b0000111;
	eight=0b01111111;
	nine=0b01100111;
  fc:	8f e7       	ldi	r24, 0x7F	; 127
  fe:	8a 83       	std	Y+2, r24	; 0x02
	zero=0b00111111;
 100:	87 e6       	ldi	r24, 0x67	; 103
 102:	8b 83       	std	Y+3, r24	; 0x03
	DDRA= 0xFF; //PORTA is output
 104:	8f e3       	ldi	r24, 0x3F	; 63
 106:	8c 83       	std	Y+4, r24	; 0x04
	PORTB=0xFF;//activate pullups
 108:	81 e2       	ldi	r24, 0x21	; 33
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	2f ef       	ldi	r18, 0xFF	; 255
 10e:	fc 01       	movw	r30, r24
 110:	20 83       	st	Z, r18
	DDRB=0x00;//input
 112:	85 e2       	ldi	r24, 0x25	; 37
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	2f ef       	ldi	r18, 0xFF	; 255
 118:	fc 01       	movw	r30, r24
 11a:	20 83       	st	Z, r18
	while (1) {
 11c:	84 e2       	ldi	r24, 0x24	; 36
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	fc 01       	movw	r30, r24
 122:	10 82       	st	Z, r1
		if(PINB & (1<<PINB0))
		{
 124:	83 e2       	ldi	r24, 0x23	; 35
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	fc 01       	movw	r30, r24
 12a:	80 81       	ld	r24, Z
 12c:	88 2f       	mov	r24, r24
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	81 70       	andi	r24, 0x01	; 1
 132:	99 27       	eor	r25, r25
 134:	89 2b       	or	r24, r25
 136:	09 f4       	brne	.+2      	; 0x13a <main+0x56>
 138:	ef c0       	rjmp	.+478    	; 0x318 <main+0x234>
			PORTA=zero;
			_delay_ms(500);
 13a:	82 e2       	ldi	r24, 0x22	; 34
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	2c 81       	ldd	r18, Y+4	; 0x04
 140:	fc 01       	movw	r30, r24
 142:	20 83       	st	Z, r18
 144:	80 e0       	ldi	r24, 0x00	; 0
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	aa ef       	ldi	r26, 0xFA	; 250
 14a:	b3 e4       	ldi	r27, 0x43	; 67
 14c:	89 87       	std	Y+9, r24	; 0x09
 14e:	9a 87       	std	Y+10, r25	; 0x0a
 150:	ab 87       	std	Y+11, r26	; 0x0b
 152:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 154:	20 e0       	ldi	r18, 0x00	; 0
 156:	30 e0       	ldi	r19, 0x00	; 0
 158:	4a e7       	ldi	r20, 0x7A	; 122
 15a:	55 e4       	ldi	r21, 0x45	; 69
 15c:	69 85       	ldd	r22, Y+9	; 0x09
 15e:	7a 85       	ldd	r23, Y+10	; 0x0a
 160:	8b 85       	ldd	r24, Y+11	; 0x0b
 162:	9c 85       	ldd	r25, Y+12	; 0x0c
 164:	0e 94 01 03 	call	0x602	; 0x602 <__mulsf3>
 168:	dc 01       	movw	r26, r24
 16a:	cb 01       	movw	r24, r22
 16c:	8f 8f       	std	Y+31, r24	; 0x1f
 16e:	98 a3       	std	Y+32, r25	; 0x20
 170:	a9 a3       	std	Y+33, r26	; 0x21
 172:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
 174:	20 e0       	ldi	r18, 0x00	; 0
 176:	30 e0       	ldi	r19, 0x00	; 0
 178:	40 e8       	ldi	r20, 0x80	; 128
 17a:	5f e3       	ldi	r21, 0x3F	; 63
 17c:	6f 8d       	ldd	r22, Y+31	; 0x1f
 17e:	78 a1       	ldd	r23, Y+32	; 0x20
 180:	89 a1       	ldd	r24, Y+33	; 0x21
 182:	9a a1       	ldd	r25, Y+34	; 0x22
 184:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__cmpsf2>
 188:	88 23       	and	r24, r24
 18a:	2c f4       	brge	.+10     	; 0x196 <main+0xb2>
		__ticks = 1;
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	9c a3       	std	Y+36, r25	; 0x24
 192:	8b a3       	std	Y+35, r24	; 0x23
 194:	3f c0       	rjmp	.+126    	; 0x214 <main+0x130>
	else if (__tmp > 65535)
 196:	20 e0       	ldi	r18, 0x00	; 0
 198:	3f ef       	ldi	r19, 0xFF	; 255
 19a:	4f e7       	ldi	r20, 0x7F	; 127
 19c:	57 e4       	ldi	r21, 0x47	; 71
 19e:	6f 8d       	ldd	r22, Y+31	; 0x1f
 1a0:	78 a1       	ldd	r23, Y+32	; 0x20
 1a2:	89 a1       	ldd	r24, Y+33	; 0x21
 1a4:	9a a1       	ldd	r25, Y+34	; 0x22
 1a6:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <__gesf2>
 1aa:	18 16       	cp	r1, r24
 1ac:	4c f5       	brge	.+82     	; 0x200 <main+0x11c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 1ae:	20 e0       	ldi	r18, 0x00	; 0
 1b0:	30 e0       	ldi	r19, 0x00	; 0
 1b2:	40 e2       	ldi	r20, 0x20	; 32
 1b4:	51 e4       	ldi	r21, 0x41	; 65
 1b6:	69 85       	ldd	r22, Y+9	; 0x09
 1b8:	7a 85       	ldd	r23, Y+10	; 0x0a
 1ba:	8b 85       	ldd	r24, Y+11	; 0x0b
 1bc:	9c 85       	ldd	r25, Y+12	; 0x0c
 1be:	0e 94 01 03 	call	0x602	; 0x602 <__mulsf3>
 1c2:	dc 01       	movw	r26, r24
 1c4:	cb 01       	movw	r24, r22
 1c6:	bc 01       	movw	r22, r24
 1c8:	cd 01       	movw	r24, r26
 1ca:	0e 94 80 02 	call	0x500	; 0x500 <__fixunssfsi>
 1ce:	dc 01       	movw	r26, r24
 1d0:	cb 01       	movw	r24, r22
 1d2:	9c a3       	std	Y+36, r25	; 0x24
 1d4:	8b a3       	std	Y+35, r24	; 0x23
 1d6:	0f c0       	rjmp	.+30     	; 0x1f6 <main+0x112>
 1d8:	80 e9       	ldi	r24, 0x90	; 144
 1da:	91 e0       	ldi	r25, 0x01	; 1
 1dc:	9e a3       	std	Y+38, r25	; 0x26
 1de:	8d a3       	std	Y+37, r24	; 0x25
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 1e0:	8d a1       	ldd	r24, Y+37	; 0x25
 1e2:	9e a1       	ldd	r25, Y+38	; 0x26
 1e4:	01 97       	sbiw	r24, 0x01	; 1
 1e6:	f1 f7       	brne	.-4      	; 0x1e4 <main+0x100>
 1e8:	9e a3       	std	Y+38, r25	; 0x26
 1ea:	8d a3       	std	Y+37, r24	; 0x25
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1ec:	8b a1       	ldd	r24, Y+35	; 0x23
 1ee:	9c a1       	ldd	r25, Y+36	; 0x24
 1f0:	01 97       	sbiw	r24, 0x01	; 1
 1f2:	9c a3       	std	Y+36, r25	; 0x24
 1f4:	8b a3       	std	Y+35, r24	; 0x23
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1f6:	8b a1       	ldd	r24, Y+35	; 0x23
 1f8:	9c a1       	ldd	r25, Y+36	; 0x24
 1fa:	89 2b       	or	r24, r25
 1fc:	69 f7       	brne	.-38     	; 0x1d8 <main+0xf4>
 1fe:	14 c0       	rjmp	.+40     	; 0x228 <main+0x144>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 200:	6f 8d       	ldd	r22, Y+31	; 0x1f
 202:	78 a1       	ldd	r23, Y+32	; 0x20
 204:	89 a1       	ldd	r24, Y+33	; 0x21
 206:	9a a1       	ldd	r25, Y+34	; 0x22
 208:	0e 94 80 02 	call	0x500	; 0x500 <__fixunssfsi>
 20c:	dc 01       	movw	r26, r24
 20e:	cb 01       	movw	r24, r22
 210:	9c a3       	std	Y+36, r25	; 0x24
 212:	8b a3       	std	Y+35, r24	; 0x23
 214:	8b a1       	ldd	r24, Y+35	; 0x23
 216:	9c a1       	ldd	r25, Y+36	; 0x24
 218:	98 a7       	std	Y+40, r25	; 0x28
 21a:	8f a3       	std	Y+39, r24	; 0x27
 21c:	8f a1       	ldd	r24, Y+39	; 0x27
 21e:	98 a5       	ldd	r25, Y+40	; 0x28
 220:	01 97       	sbiw	r24, 0x01	; 1
 222:	f1 f7       	brne	.-4      	; 0x220 <main+0x13c>
 224:	98 a7       	std	Y+40, r25	; 0x28
 226:	8f a3       	std	Y+39, r24	; 0x27
			PORTA=one;
			_delay_ms(500);
 228:	82 e2       	ldi	r24, 0x22	; 34
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	29 81       	ldd	r18, Y+1	; 0x01
 22e:	fc 01       	movw	r30, r24
 230:	20 83       	st	Z, r18
 232:	80 e0       	ldi	r24, 0x00	; 0
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	aa ef       	ldi	r26, 0xFA	; 250
 238:	b3 e4       	ldi	r27, 0x43	; 67
 23a:	89 8b       	std	Y+17, r24	; 0x11
 23c:	9a 8b       	std	Y+18, r25	; 0x12
 23e:	ab 8b       	std	Y+19, r26	; 0x13
 240:	bc 8b       	std	Y+20, r27	; 0x14

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 242:	20 e0       	ldi	r18, 0x00	; 0
 244:	30 e0       	ldi	r19, 0x00	; 0
 246:	4a e7       	ldi	r20, 0x7A	; 122
 248:	55 e4       	ldi	r21, 0x45	; 69
 24a:	69 89       	ldd	r22, Y+17	; 0x11
 24c:	7a 89       	ldd	r23, Y+18	; 0x12
 24e:	8b 89       	ldd	r24, Y+19	; 0x13
 250:	9c 89       	ldd	r25, Y+20	; 0x14
 252:	0e 94 01 03 	call	0x602	; 0x602 <__mulsf3>
 256:	dc 01       	movw	r26, r24
 258:	cb 01       	movw	r24, r22
 25a:	8d 8b       	std	Y+21, r24	; 0x15
 25c:	9e 8b       	std	Y+22, r25	; 0x16
 25e:	af 8b       	std	Y+23, r26	; 0x17
 260:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
 262:	20 e0       	ldi	r18, 0x00	; 0
 264:	30 e0       	ldi	r19, 0x00	; 0
 266:	40 e8       	ldi	r20, 0x80	; 128
 268:	5f e3       	ldi	r21, 0x3F	; 63
 26a:	6d 89       	ldd	r22, Y+21	; 0x15
 26c:	7e 89       	ldd	r23, Y+22	; 0x16
 26e:	8f 89       	ldd	r24, Y+23	; 0x17
 270:	98 8d       	ldd	r25, Y+24	; 0x18
 272:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__cmpsf2>
 276:	88 23       	and	r24, r24
 278:	2c f4       	brge	.+10     	; 0x284 <main+0x1a0>
		__ticks = 1;
 27a:	81 e0       	ldi	r24, 0x01	; 1
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	9a 8f       	std	Y+26, r25	; 0x1a
 280:	89 8f       	std	Y+25, r24	; 0x19
 282:	3f c0       	rjmp	.+126    	; 0x302 <main+0x21e>
	else if (__tmp > 65535)
 284:	20 e0       	ldi	r18, 0x00	; 0
 286:	3f ef       	ldi	r19, 0xFF	; 255
 288:	4f e7       	ldi	r20, 0x7F	; 127
 28a:	57 e4       	ldi	r21, 0x47	; 71
 28c:	6d 89       	ldd	r22, Y+21	; 0x15
 28e:	7e 89       	ldd	r23, Y+22	; 0x16
 290:	8f 89       	ldd	r24, Y+23	; 0x17
 292:	98 8d       	ldd	r25, Y+24	; 0x18
 294:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <__gesf2>
 298:	18 16       	cp	r1, r24
 29a:	4c f5       	brge	.+82     	; 0x2ee <main+0x20a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 29c:	20 e0       	ldi	r18, 0x00	; 0
 29e:	30 e0       	ldi	r19, 0x00	; 0
 2a0:	40 e2       	ldi	r20, 0x20	; 32
 2a2:	51 e4       	ldi	r21, 0x41	; 65
 2a4:	69 89       	ldd	r22, Y+17	; 0x11
 2a6:	7a 89       	ldd	r23, Y+18	; 0x12
 2a8:	8b 89       	ldd	r24, Y+19	; 0x13
 2aa:	9c 89       	ldd	r25, Y+20	; 0x14
 2ac:	0e 94 01 03 	call	0x602	; 0x602 <__mulsf3>
 2b0:	dc 01       	movw	r26, r24
 2b2:	cb 01       	movw	r24, r22
 2b4:	bc 01       	movw	r22, r24
 2b6:	cd 01       	movw	r24, r26
 2b8:	0e 94 80 02 	call	0x500	; 0x500 <__fixunssfsi>
 2bc:	dc 01       	movw	r26, r24
 2be:	cb 01       	movw	r24, r22
 2c0:	9a 8f       	std	Y+26, r25	; 0x1a
 2c2:	89 8f       	std	Y+25, r24	; 0x19
 2c4:	0f c0       	rjmp	.+30     	; 0x2e4 <main+0x200>
 2c6:	80 e9       	ldi	r24, 0x90	; 144
 2c8:	91 e0       	ldi	r25, 0x01	; 1
 2ca:	9c 8f       	std	Y+28, r25	; 0x1c
 2cc:	8b 8f       	std	Y+27, r24	; 0x1b
 2ce:	8b 8d       	ldd	r24, Y+27	; 0x1b
 2d0:	9c 8d       	ldd	r25, Y+28	; 0x1c
 2d2:	01 97       	sbiw	r24, 0x01	; 1
 2d4:	f1 f7       	brne	.-4      	; 0x2d2 <main+0x1ee>
 2d6:	9c 8f       	std	Y+28, r25	; 0x1c
 2d8:	8b 8f       	std	Y+27, r24	; 0x1b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2da:	89 8d       	ldd	r24, Y+25	; 0x19
 2dc:	9a 8d       	ldd	r25, Y+26	; 0x1a
 2de:	01 97       	sbiw	r24, 0x01	; 1
 2e0:	9a 8f       	std	Y+26, r25	; 0x1a
 2e2:	89 8f       	std	Y+25, r24	; 0x19
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2e4:	89 8d       	ldd	r24, Y+25	; 0x19
 2e6:	9a 8d       	ldd	r25, Y+26	; 0x1a
 2e8:	89 2b       	or	r24, r25
 2ea:	69 f7       	brne	.-38     	; 0x2c6 <main+0x1e2>
 2ec:	03 c1       	rjmp	.+518    	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 2ee:	6d 89       	ldd	r22, Y+21	; 0x15
 2f0:	7e 89       	ldd	r23, Y+22	; 0x16
 2f2:	8f 89       	ldd	r24, Y+23	; 0x17
 2f4:	98 8d       	ldd	r25, Y+24	; 0x18
 2f6:	0e 94 80 02 	call	0x500	; 0x500 <__fixunssfsi>
 2fa:	dc 01       	movw	r26, r24
 2fc:	cb 01       	movw	r24, r22
 2fe:	9a 8f       	std	Y+26, r25	; 0x1a
 300:	89 8f       	std	Y+25, r24	; 0x19
 302:	89 8d       	ldd	r24, Y+25	; 0x19
 304:	9a 8d       	ldd	r25, Y+26	; 0x1a
 306:	9e 8f       	std	Y+30, r25	; 0x1e
 308:	8d 8f       	std	Y+29, r24	; 0x1d
 30a:	8d 8d       	ldd	r24, Y+29	; 0x1d
 30c:	9e 8d       	ldd	r25, Y+30	; 0x1e
 30e:	01 97       	sbiw	r24, 0x01	; 1
 310:	f1 f7       	brne	.-4      	; 0x30e <main+0x22a>
 312:	9e 8f       	std	Y+30, r25	; 0x1e
 314:	8d 8f       	std	Y+29, r24	; 0x1d
 316:	06 cf       	rjmp	.-500    	; 0x124 <main+0x40>
		}
		else
		{
			
			PORTA=nine;
			_delay_ms(500);
 318:	82 e2       	ldi	r24, 0x22	; 34
 31a:	90 e0       	ldi	r25, 0x00	; 0
 31c:	2b 81       	ldd	r18, Y+3	; 0x03
 31e:	fc 01       	movw	r30, r24
 320:	20 83       	st	Z, r18
 322:	80 e0       	ldi	r24, 0x00	; 0
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	aa ef       	ldi	r26, 0xFA	; 250
 328:	b3 e4       	ldi	r27, 0x43	; 67
 32a:	8d 87       	std	Y+13, r24	; 0x0d
 32c:	9e 87       	std	Y+14, r25	; 0x0e
 32e:	af 87       	std	Y+15, r26	; 0x0f
 330:	b8 8b       	std	Y+16, r27	; 0x10

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 332:	20 e0       	ldi	r18, 0x00	; 0
 334:	30 e0       	ldi	r19, 0x00	; 0
 336:	4a e7       	ldi	r20, 0x7A	; 122
 338:	55 e4       	ldi	r21, 0x45	; 69
 33a:	6d 85       	ldd	r22, Y+13	; 0x0d
 33c:	7e 85       	ldd	r23, Y+14	; 0x0e
 33e:	8f 85       	ldd	r24, Y+15	; 0x0f
 340:	98 89       	ldd	r25, Y+16	; 0x10
 342:	0e 94 01 03 	call	0x602	; 0x602 <__mulsf3>
 346:	dc 01       	movw	r26, r24
 348:	cb 01       	movw	r24, r22
 34a:	8b ab       	std	Y+51, r24	; 0x33
 34c:	9c ab       	std	Y+52, r25	; 0x34
 34e:	ad ab       	std	Y+53, r26	; 0x35
 350:	be ab       	std	Y+54, r27	; 0x36
	if (__tmp < 1.0)
 352:	20 e0       	ldi	r18, 0x00	; 0
 354:	30 e0       	ldi	r19, 0x00	; 0
 356:	40 e8       	ldi	r20, 0x80	; 128
 358:	5f e3       	ldi	r21, 0x3F	; 63
 35a:	6b a9       	ldd	r22, Y+51	; 0x33
 35c:	7c a9       	ldd	r23, Y+52	; 0x34
 35e:	8d a9       	ldd	r24, Y+53	; 0x35
 360:	9e a9       	ldd	r25, Y+54	; 0x36
 362:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__cmpsf2>
 366:	88 23       	and	r24, r24
 368:	2c f4       	brge	.+10     	; 0x374 <main+0x290>
		__ticks = 1;
 36a:	81 e0       	ldi	r24, 0x01	; 1
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	98 af       	std	Y+56, r25	; 0x38
 370:	8f ab       	std	Y+55, r24	; 0x37
 372:	3f c0       	rjmp	.+126    	; 0x3f2 <main+0x30e>
	else if (__tmp > 65535)
 374:	20 e0       	ldi	r18, 0x00	; 0
 376:	3f ef       	ldi	r19, 0xFF	; 255
 378:	4f e7       	ldi	r20, 0x7F	; 127
 37a:	57 e4       	ldi	r21, 0x47	; 71
 37c:	6b a9       	ldd	r22, Y+51	; 0x33
 37e:	7c a9       	ldd	r23, Y+52	; 0x34
 380:	8d a9       	ldd	r24, Y+53	; 0x35
 382:	9e a9       	ldd	r25, Y+54	; 0x36
 384:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <__gesf2>
 388:	18 16       	cp	r1, r24
 38a:	4c f5       	brge	.+82     	; 0x3de <main+0x2fa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 38c:	20 e0       	ldi	r18, 0x00	; 0
 38e:	30 e0       	ldi	r19, 0x00	; 0
 390:	40 e2       	ldi	r20, 0x20	; 32
 392:	51 e4       	ldi	r21, 0x41	; 65
 394:	6d 85       	ldd	r22, Y+13	; 0x0d
 396:	7e 85       	ldd	r23, Y+14	; 0x0e
 398:	8f 85       	ldd	r24, Y+15	; 0x0f
 39a:	98 89       	ldd	r25, Y+16	; 0x10
 39c:	0e 94 01 03 	call	0x602	; 0x602 <__mulsf3>
 3a0:	dc 01       	movw	r26, r24
 3a2:	cb 01       	movw	r24, r22
 3a4:	bc 01       	movw	r22, r24
 3a6:	cd 01       	movw	r24, r26
 3a8:	0e 94 80 02 	call	0x500	; 0x500 <__fixunssfsi>
 3ac:	dc 01       	movw	r26, r24
 3ae:	cb 01       	movw	r24, r22
 3b0:	98 af       	std	Y+56, r25	; 0x38
 3b2:	8f ab       	std	Y+55, r24	; 0x37
 3b4:	0f c0       	rjmp	.+30     	; 0x3d4 <main+0x2f0>
 3b6:	80 e9       	ldi	r24, 0x90	; 144
 3b8:	91 e0       	ldi	r25, 0x01	; 1
 3ba:	9a af       	std	Y+58, r25	; 0x3a
 3bc:	89 af       	std	Y+57, r24	; 0x39
 3be:	89 ad       	ldd	r24, Y+57	; 0x39
 3c0:	9a ad       	ldd	r25, Y+58	; 0x3a
 3c2:	01 97       	sbiw	r24, 0x01	; 1
 3c4:	f1 f7       	brne	.-4      	; 0x3c2 <main+0x2de>
 3c6:	9a af       	std	Y+58, r25	; 0x3a
 3c8:	89 af       	std	Y+57, r24	; 0x39
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 3ca:	8f a9       	ldd	r24, Y+55	; 0x37
 3cc:	98 ad       	ldd	r25, Y+56	; 0x38
 3ce:	01 97       	sbiw	r24, 0x01	; 1
 3d0:	98 af       	std	Y+56, r25	; 0x38
 3d2:	8f ab       	std	Y+55, r24	; 0x37
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 3d4:	8f a9       	ldd	r24, Y+55	; 0x37
 3d6:	98 ad       	ldd	r25, Y+56	; 0x38
 3d8:	89 2b       	or	r24, r25
 3da:	69 f7       	brne	.-38     	; 0x3b6 <main+0x2d2>
 3dc:	14 c0       	rjmp	.+40     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 3de:	6b a9       	ldd	r22, Y+51	; 0x33
 3e0:	7c a9       	ldd	r23, Y+52	; 0x34
 3e2:	8d a9       	ldd	r24, Y+53	; 0x35
 3e4:	9e a9       	ldd	r25, Y+54	; 0x36
 3e6:	0e 94 80 02 	call	0x500	; 0x500 <__fixunssfsi>
 3ea:	dc 01       	movw	r26, r24
 3ec:	cb 01       	movw	r24, r22
 3ee:	98 af       	std	Y+56, r25	; 0x38
 3f0:	8f ab       	std	Y+55, r24	; 0x37
 3f2:	8f a9       	ldd	r24, Y+55	; 0x37
 3f4:	98 ad       	ldd	r25, Y+56	; 0x38
 3f6:	9c af       	std	Y+60, r25	; 0x3c
 3f8:	8b af       	std	Y+59, r24	; 0x3b
 3fa:	8b ad       	ldd	r24, Y+59	; 0x3b
 3fc:	9c ad       	ldd	r25, Y+60	; 0x3c
 3fe:	01 97       	sbiw	r24, 0x01	; 1
 400:	f1 f7       	brne	.-4      	; 0x3fe <main+0x31a>
 402:	9c af       	std	Y+60, r25	; 0x3c
 404:	8b af       	std	Y+59, r24	; 0x3b
			PORTA=eight;
			_delay_ms(500);
 406:	82 e2       	ldi	r24, 0x22	; 34
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	2a 81       	ldd	r18, Y+2	; 0x02
 40c:	fc 01       	movw	r30, r24
 40e:	20 83       	st	Z, r18
 410:	80 e0       	ldi	r24, 0x00	; 0
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	aa ef       	ldi	r26, 0xFA	; 250
 416:	b3 e4       	ldi	r27, 0x43	; 67
 418:	8d 83       	std	Y+5, r24	; 0x05
 41a:	9e 83       	std	Y+6, r25	; 0x06
 41c:	af 83       	std	Y+7, r26	; 0x07
 41e:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 420:	20 e0       	ldi	r18, 0x00	; 0
 422:	30 e0       	ldi	r19, 0x00	; 0
 424:	4a e7       	ldi	r20, 0x7A	; 122
 426:	55 e4       	ldi	r21, 0x45	; 69
 428:	6d 81       	ldd	r22, Y+5	; 0x05
 42a:	7e 81       	ldd	r23, Y+6	; 0x06
 42c:	8f 81       	ldd	r24, Y+7	; 0x07
 42e:	98 85       	ldd	r25, Y+8	; 0x08
 430:	0e 94 01 03 	call	0x602	; 0x602 <__mulsf3>
 434:	dc 01       	movw	r26, r24
 436:	cb 01       	movw	r24, r22
 438:	89 a7       	std	Y+41, r24	; 0x29
 43a:	9a a7       	std	Y+42, r25	; 0x2a
 43c:	ab a7       	std	Y+43, r26	; 0x2b
 43e:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
 440:	20 e0       	ldi	r18, 0x00	; 0
 442:	30 e0       	ldi	r19, 0x00	; 0
 444:	40 e8       	ldi	r20, 0x80	; 128
 446:	5f e3       	ldi	r21, 0x3F	; 63
 448:	69 a5       	ldd	r22, Y+41	; 0x29
 44a:	7a a5       	ldd	r23, Y+42	; 0x2a
 44c:	8b a5       	ldd	r24, Y+43	; 0x2b
 44e:	9c a5       	ldd	r25, Y+44	; 0x2c
 450:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__cmpsf2>
 454:	88 23       	and	r24, r24
 456:	2c f4       	brge	.+10     	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
		__ticks = 1;
 458:	81 e0       	ldi	r24, 0x01	; 1
 45a:	90 e0       	ldi	r25, 0x00	; 0
 45c:	9e a7       	std	Y+46, r25	; 0x2e
 45e:	8d a7       	std	Y+45, r24	; 0x2d
 460:	3f c0       	rjmp	.+126    	; 0x4e0 <__EEPROM_REGION_LENGTH__+0xe0>
	else if (__tmp > 65535)
 462:	20 e0       	ldi	r18, 0x00	; 0
 464:	3f ef       	ldi	r19, 0xFF	; 255
 466:	4f e7       	ldi	r20, 0x7F	; 127
 468:	57 e4       	ldi	r21, 0x47	; 71
 46a:	69 a5       	ldd	r22, Y+41	; 0x29
 46c:	7a a5       	ldd	r23, Y+42	; 0x2a
 46e:	8b a5       	ldd	r24, Y+43	; 0x2b
 470:	9c a5       	ldd	r25, Y+44	; 0x2c
 472:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <__gesf2>
 476:	18 16       	cp	r1, r24
 478:	4c f5       	brge	.+82     	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 47a:	20 e0       	ldi	r18, 0x00	; 0
 47c:	30 e0       	ldi	r19, 0x00	; 0
 47e:	40 e2       	ldi	r20, 0x20	; 32
 480:	51 e4       	ldi	r21, 0x41	; 65
 482:	6d 81       	ldd	r22, Y+5	; 0x05
 484:	7e 81       	ldd	r23, Y+6	; 0x06
 486:	8f 81       	ldd	r24, Y+7	; 0x07
 488:	98 85       	ldd	r25, Y+8	; 0x08
 48a:	0e 94 01 03 	call	0x602	; 0x602 <__mulsf3>
 48e:	dc 01       	movw	r26, r24
 490:	cb 01       	movw	r24, r22
 492:	bc 01       	movw	r22, r24
 494:	cd 01       	movw	r24, r26
 496:	0e 94 80 02 	call	0x500	; 0x500 <__fixunssfsi>
 49a:	dc 01       	movw	r26, r24
 49c:	cb 01       	movw	r24, r22
 49e:	9e a7       	std	Y+46, r25	; 0x2e
 4a0:	8d a7       	std	Y+45, r24	; 0x2d
 4a2:	0f c0       	rjmp	.+30     	; 0x4c2 <__EEPROM_REGION_LENGTH__+0xc2>
 4a4:	80 e9       	ldi	r24, 0x90	; 144
 4a6:	91 e0       	ldi	r25, 0x01	; 1
 4a8:	98 ab       	std	Y+48, r25	; 0x30
 4aa:	8f a7       	std	Y+47, r24	; 0x2f
 4ac:	8f a5       	ldd	r24, Y+47	; 0x2f
 4ae:	98 a9       	ldd	r25, Y+48	; 0x30
 4b0:	01 97       	sbiw	r24, 0x01	; 1
 4b2:	f1 f7       	brne	.-4      	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 4b4:	98 ab       	std	Y+48, r25	; 0x30
 4b6:	8f a7       	std	Y+47, r24	; 0x2f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 4b8:	8d a5       	ldd	r24, Y+45	; 0x2d
 4ba:	9e a5       	ldd	r25, Y+46	; 0x2e
 4bc:	01 97       	sbiw	r24, 0x01	; 1
 4be:	9e a7       	std	Y+46, r25	; 0x2e
 4c0:	8d a7       	std	Y+45, r24	; 0x2d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 4c2:	8d a5       	ldd	r24, Y+45	; 0x2d
 4c4:	9e a5       	ldd	r25, Y+46	; 0x2e
 4c6:	89 2b       	or	r24, r25
 4c8:	69 f7       	brne	.-38     	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
 4ca:	14 c0       	rjmp	.+40     	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 4cc:	69 a5       	ldd	r22, Y+41	; 0x29
 4ce:	7a a5       	ldd	r23, Y+42	; 0x2a
 4d0:	8b a5       	ldd	r24, Y+43	; 0x2b
 4d2:	9c a5       	ldd	r25, Y+44	; 0x2c
 4d4:	0e 94 80 02 	call	0x500	; 0x500 <__fixunssfsi>
 4d8:	dc 01       	movw	r26, r24
 4da:	cb 01       	movw	r24, r22
 4dc:	9e a7       	std	Y+46, r25	; 0x2e
 4de:	8d a7       	std	Y+45, r24	; 0x2d
 4e0:	8d a5       	ldd	r24, Y+45	; 0x2d
 4e2:	9e a5       	ldd	r25, Y+46	; 0x2e
 4e4:	9a ab       	std	Y+50, r25	; 0x32
 4e6:	89 ab       	std	Y+49, r24	; 0x31
 4e8:	89 a9       	ldd	r24, Y+49	; 0x31
 4ea:	9a a9       	ldd	r25, Y+50	; 0x32
 4ec:	01 97       	sbiw	r24, 0x01	; 1
 4ee:	f1 f7       	brne	.-4      	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
 4f0:	9a ab       	std	Y+50, r25	; 0x32
 4f2:	89 ab       	std	Y+49, r24	; 0x31
		}
		
	}
	return 0;
 4f4:	17 ce       	rjmp	.-978    	; 0x124 <main+0x40>

000004f6 <__cmpsf2>:
 4f6:	0e 94 af 02 	call	0x55e	; 0x55e <__fp_cmp>
 4fa:	08 f4       	brcc	.+2      	; 0x4fe <__cmpsf2+0x8>
 4fc:	81 e0       	ldi	r24, 0x01	; 1
 4fe:	08 95       	ret

00000500 <__fixunssfsi>:
 500:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__fp_splitA>
 504:	88 f0       	brcs	.+34     	; 0x528 <__fixunssfsi+0x28>
 506:	9f 57       	subi	r25, 0x7F	; 127
 508:	98 f0       	brcs	.+38     	; 0x530 <__fixunssfsi+0x30>
 50a:	b9 2f       	mov	r27, r25
 50c:	99 27       	eor	r25, r25
 50e:	b7 51       	subi	r27, 0x17	; 23
 510:	b0 f0       	brcs	.+44     	; 0x53e <__fixunssfsi+0x3e>
 512:	e1 f0       	breq	.+56     	; 0x54c <__fixunssfsi+0x4c>
 514:	66 0f       	add	r22, r22
 516:	77 1f       	adc	r23, r23
 518:	88 1f       	adc	r24, r24
 51a:	99 1f       	adc	r25, r25
 51c:	1a f0       	brmi	.+6      	; 0x524 <__fixunssfsi+0x24>
 51e:	ba 95       	dec	r27
 520:	c9 f7       	brne	.-14     	; 0x514 <__fixunssfsi+0x14>
 522:	14 c0       	rjmp	.+40     	; 0x54c <__fixunssfsi+0x4c>
 524:	b1 30       	cpi	r27, 0x01	; 1
 526:	91 f0       	breq	.+36     	; 0x54c <__fixunssfsi+0x4c>
 528:	0e 94 f5 02 	call	0x5ea	; 0x5ea <__fp_zero>
 52c:	b1 e0       	ldi	r27, 0x01	; 1
 52e:	08 95       	ret
 530:	0c 94 f5 02 	jmp	0x5ea	; 0x5ea <__fp_zero>
 534:	67 2f       	mov	r22, r23
 536:	78 2f       	mov	r23, r24
 538:	88 27       	eor	r24, r24
 53a:	b8 5f       	subi	r27, 0xF8	; 248
 53c:	39 f0       	breq	.+14     	; 0x54c <__fixunssfsi+0x4c>
 53e:	b9 3f       	cpi	r27, 0xF9	; 249
 540:	cc f3       	brlt	.-14     	; 0x534 <__fixunssfsi+0x34>
 542:	86 95       	lsr	r24
 544:	77 95       	ror	r23
 546:	67 95       	ror	r22
 548:	b3 95       	inc	r27
 54a:	d9 f7       	brne	.-10     	; 0x542 <__fixunssfsi+0x42>
 54c:	3e f4       	brtc	.+14     	; 0x55c <__fixunssfsi+0x5c>
 54e:	90 95       	com	r25
 550:	80 95       	com	r24
 552:	70 95       	com	r23
 554:	61 95       	neg	r22
 556:	7f 4f       	sbci	r23, 0xFF	; 255
 558:	8f 4f       	sbci	r24, 0xFF	; 255
 55a:	9f 4f       	sbci	r25, 0xFF	; 255
 55c:	08 95       	ret

0000055e <__fp_cmp>:
 55e:	99 0f       	add	r25, r25
 560:	00 08       	sbc	r0, r0
 562:	55 0f       	add	r21, r21
 564:	aa 0b       	sbc	r26, r26
 566:	e0 e8       	ldi	r30, 0x80	; 128
 568:	fe ef       	ldi	r31, 0xFE	; 254
 56a:	16 16       	cp	r1, r22
 56c:	17 06       	cpc	r1, r23
 56e:	e8 07       	cpc	r30, r24
 570:	f9 07       	cpc	r31, r25
 572:	c0 f0       	brcs	.+48     	; 0x5a4 <__fp_cmp+0x46>
 574:	12 16       	cp	r1, r18
 576:	13 06       	cpc	r1, r19
 578:	e4 07       	cpc	r30, r20
 57a:	f5 07       	cpc	r31, r21
 57c:	98 f0       	brcs	.+38     	; 0x5a4 <__fp_cmp+0x46>
 57e:	62 1b       	sub	r22, r18
 580:	73 0b       	sbc	r23, r19
 582:	84 0b       	sbc	r24, r20
 584:	95 0b       	sbc	r25, r21
 586:	39 f4       	brne	.+14     	; 0x596 <__fp_cmp+0x38>
 588:	0a 26       	eor	r0, r26
 58a:	61 f0       	breq	.+24     	; 0x5a4 <__fp_cmp+0x46>
 58c:	23 2b       	or	r18, r19
 58e:	24 2b       	or	r18, r20
 590:	25 2b       	or	r18, r21
 592:	21 f4       	brne	.+8      	; 0x59c <__fp_cmp+0x3e>
 594:	08 95       	ret
 596:	0a 26       	eor	r0, r26
 598:	09 f4       	brne	.+2      	; 0x59c <__fp_cmp+0x3e>
 59a:	a1 40       	sbci	r26, 0x01	; 1
 59c:	a6 95       	lsr	r26
 59e:	8f ef       	ldi	r24, 0xFF	; 255
 5a0:	81 1d       	adc	r24, r1
 5a2:	81 1d       	adc	r24, r1
 5a4:	08 95       	ret

000005a6 <__fp_split3>:
 5a6:	57 fd       	sbrc	r21, 7
 5a8:	90 58       	subi	r25, 0x80	; 128
 5aa:	44 0f       	add	r20, r20
 5ac:	55 1f       	adc	r21, r21
 5ae:	59 f0       	breq	.+22     	; 0x5c6 <__fp_splitA+0x10>
 5b0:	5f 3f       	cpi	r21, 0xFF	; 255
 5b2:	71 f0       	breq	.+28     	; 0x5d0 <__fp_splitA+0x1a>
 5b4:	47 95       	ror	r20

000005b6 <__fp_splitA>:
 5b6:	88 0f       	add	r24, r24
 5b8:	97 fb       	bst	r25, 7
 5ba:	99 1f       	adc	r25, r25
 5bc:	61 f0       	breq	.+24     	; 0x5d6 <__fp_splitA+0x20>
 5be:	9f 3f       	cpi	r25, 0xFF	; 255
 5c0:	79 f0       	breq	.+30     	; 0x5e0 <__fp_splitA+0x2a>
 5c2:	87 95       	ror	r24
 5c4:	08 95       	ret
 5c6:	12 16       	cp	r1, r18
 5c8:	13 06       	cpc	r1, r19
 5ca:	14 06       	cpc	r1, r20
 5cc:	55 1f       	adc	r21, r21
 5ce:	f2 cf       	rjmp	.-28     	; 0x5b4 <__fp_split3+0xe>
 5d0:	46 95       	lsr	r20
 5d2:	f1 df       	rcall	.-30     	; 0x5b6 <__fp_splitA>
 5d4:	08 c0       	rjmp	.+16     	; 0x5e6 <__fp_splitA+0x30>
 5d6:	16 16       	cp	r1, r22
 5d8:	17 06       	cpc	r1, r23
 5da:	18 06       	cpc	r1, r24
 5dc:	99 1f       	adc	r25, r25
 5de:	f1 cf       	rjmp	.-30     	; 0x5c2 <__fp_splitA+0xc>
 5e0:	86 95       	lsr	r24
 5e2:	71 05       	cpc	r23, r1
 5e4:	61 05       	cpc	r22, r1
 5e6:	08 94       	sec
 5e8:	08 95       	ret

000005ea <__fp_zero>:
 5ea:	e8 94       	clt

000005ec <__fp_szero>:
 5ec:	bb 27       	eor	r27, r27
 5ee:	66 27       	eor	r22, r22
 5f0:	77 27       	eor	r23, r23
 5f2:	cb 01       	movw	r24, r22
 5f4:	97 f9       	bld	r25, 7
 5f6:	08 95       	ret

000005f8 <__gesf2>:
 5f8:	0e 94 af 02 	call	0x55e	; 0x55e <__fp_cmp>
 5fc:	08 f4       	brcc	.+2      	; 0x600 <__gesf2+0x8>
 5fe:	8f ef       	ldi	r24, 0xFF	; 255
 600:	08 95       	ret

00000602 <__mulsf3>:
 602:	0e 94 14 03 	call	0x628	; 0x628 <__mulsf3x>
 606:	0c 94 85 03 	jmp	0x70a	; 0x70a <__fp_round>
 60a:	0e 94 77 03 	call	0x6ee	; 0x6ee <__fp_pscA>
 60e:	38 f0       	brcs	.+14     	; 0x61e <__mulsf3+0x1c>
 610:	0e 94 7e 03 	call	0x6fc	; 0x6fc <__fp_pscB>
 614:	20 f0       	brcs	.+8      	; 0x61e <__mulsf3+0x1c>
 616:	95 23       	and	r25, r21
 618:	11 f0       	breq	.+4      	; 0x61e <__mulsf3+0x1c>
 61a:	0c 94 6e 03 	jmp	0x6dc	; 0x6dc <__fp_inf>
 61e:	0c 94 74 03 	jmp	0x6e8	; 0x6e8 <__fp_nan>
 622:	11 24       	eor	r1, r1
 624:	0c 94 f6 02 	jmp	0x5ec	; 0x5ec <__fp_szero>

00000628 <__mulsf3x>:
 628:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <__fp_split3>
 62c:	70 f3       	brcs	.-36     	; 0x60a <__mulsf3+0x8>

0000062e <__mulsf3_pse>:
 62e:	95 9f       	mul	r25, r21
 630:	c1 f3       	breq	.-16     	; 0x622 <__mulsf3+0x20>
 632:	95 0f       	add	r25, r21
 634:	50 e0       	ldi	r21, 0x00	; 0
 636:	55 1f       	adc	r21, r21
 638:	62 9f       	mul	r22, r18
 63a:	f0 01       	movw	r30, r0
 63c:	72 9f       	mul	r23, r18
 63e:	bb 27       	eor	r27, r27
 640:	f0 0d       	add	r31, r0
 642:	b1 1d       	adc	r27, r1
 644:	63 9f       	mul	r22, r19
 646:	aa 27       	eor	r26, r26
 648:	f0 0d       	add	r31, r0
 64a:	b1 1d       	adc	r27, r1
 64c:	aa 1f       	adc	r26, r26
 64e:	64 9f       	mul	r22, r20
 650:	66 27       	eor	r22, r22
 652:	b0 0d       	add	r27, r0
 654:	a1 1d       	adc	r26, r1
 656:	66 1f       	adc	r22, r22
 658:	82 9f       	mul	r24, r18
 65a:	22 27       	eor	r18, r18
 65c:	b0 0d       	add	r27, r0
 65e:	a1 1d       	adc	r26, r1
 660:	62 1f       	adc	r22, r18
 662:	73 9f       	mul	r23, r19
 664:	b0 0d       	add	r27, r0
 666:	a1 1d       	adc	r26, r1
 668:	62 1f       	adc	r22, r18
 66a:	83 9f       	mul	r24, r19
 66c:	a0 0d       	add	r26, r0
 66e:	61 1d       	adc	r22, r1
 670:	22 1f       	adc	r18, r18
 672:	74 9f       	mul	r23, r20
 674:	33 27       	eor	r19, r19
 676:	a0 0d       	add	r26, r0
 678:	61 1d       	adc	r22, r1
 67a:	23 1f       	adc	r18, r19
 67c:	84 9f       	mul	r24, r20
 67e:	60 0d       	add	r22, r0
 680:	21 1d       	adc	r18, r1
 682:	82 2f       	mov	r24, r18
 684:	76 2f       	mov	r23, r22
 686:	6a 2f       	mov	r22, r26
 688:	11 24       	eor	r1, r1
 68a:	9f 57       	subi	r25, 0x7F	; 127
 68c:	50 40       	sbci	r21, 0x00	; 0
 68e:	9a f0       	brmi	.+38     	; 0x6b6 <__mulsf3_pse+0x88>
 690:	f1 f0       	breq	.+60     	; 0x6ce <__mulsf3_pse+0xa0>
 692:	88 23       	and	r24, r24
 694:	4a f0       	brmi	.+18     	; 0x6a8 <__mulsf3_pse+0x7a>
 696:	ee 0f       	add	r30, r30
 698:	ff 1f       	adc	r31, r31
 69a:	bb 1f       	adc	r27, r27
 69c:	66 1f       	adc	r22, r22
 69e:	77 1f       	adc	r23, r23
 6a0:	88 1f       	adc	r24, r24
 6a2:	91 50       	subi	r25, 0x01	; 1
 6a4:	50 40       	sbci	r21, 0x00	; 0
 6a6:	a9 f7       	brne	.-22     	; 0x692 <__mulsf3_pse+0x64>
 6a8:	9e 3f       	cpi	r25, 0xFE	; 254
 6aa:	51 05       	cpc	r21, r1
 6ac:	80 f0       	brcs	.+32     	; 0x6ce <__mulsf3_pse+0xa0>
 6ae:	0c 94 6e 03 	jmp	0x6dc	; 0x6dc <__fp_inf>
 6b2:	0c 94 f6 02 	jmp	0x5ec	; 0x5ec <__fp_szero>
 6b6:	5f 3f       	cpi	r21, 0xFF	; 255
 6b8:	e4 f3       	brlt	.-8      	; 0x6b2 <__mulsf3_pse+0x84>
 6ba:	98 3e       	cpi	r25, 0xE8	; 232
 6bc:	d4 f3       	brlt	.-12     	; 0x6b2 <__mulsf3_pse+0x84>
 6be:	86 95       	lsr	r24
 6c0:	77 95       	ror	r23
 6c2:	67 95       	ror	r22
 6c4:	b7 95       	ror	r27
 6c6:	f7 95       	ror	r31
 6c8:	e7 95       	ror	r30
 6ca:	9f 5f       	subi	r25, 0xFF	; 255
 6cc:	c1 f7       	brne	.-16     	; 0x6be <__mulsf3_pse+0x90>
 6ce:	fe 2b       	or	r31, r30
 6d0:	88 0f       	add	r24, r24
 6d2:	91 1d       	adc	r25, r1
 6d4:	96 95       	lsr	r25
 6d6:	87 95       	ror	r24
 6d8:	97 f9       	bld	r25, 7
 6da:	08 95       	ret

000006dc <__fp_inf>:
 6dc:	97 f9       	bld	r25, 7
 6de:	9f 67       	ori	r25, 0x7F	; 127
 6e0:	80 e8       	ldi	r24, 0x80	; 128
 6e2:	70 e0       	ldi	r23, 0x00	; 0
 6e4:	60 e0       	ldi	r22, 0x00	; 0
 6e6:	08 95       	ret

000006e8 <__fp_nan>:
 6e8:	9f ef       	ldi	r25, 0xFF	; 255
 6ea:	80 ec       	ldi	r24, 0xC0	; 192
 6ec:	08 95       	ret

000006ee <__fp_pscA>:
 6ee:	00 24       	eor	r0, r0
 6f0:	0a 94       	dec	r0
 6f2:	16 16       	cp	r1, r22
 6f4:	17 06       	cpc	r1, r23
 6f6:	18 06       	cpc	r1, r24
 6f8:	09 06       	cpc	r0, r25
 6fa:	08 95       	ret

000006fc <__fp_pscB>:
 6fc:	00 24       	eor	r0, r0
 6fe:	0a 94       	dec	r0
 700:	12 16       	cp	r1, r18
 702:	13 06       	cpc	r1, r19
 704:	14 06       	cpc	r1, r20
 706:	05 06       	cpc	r0, r21
 708:	08 95       	ret

0000070a <__fp_round>:
 70a:	09 2e       	mov	r0, r25
 70c:	03 94       	inc	r0
 70e:	00 0c       	add	r0, r0
 710:	11 f4       	brne	.+4      	; 0x716 <__fp_round+0xc>
 712:	88 23       	and	r24, r24
 714:	52 f0       	brmi	.+20     	; 0x72a <__fp_round+0x20>
 716:	bb 0f       	add	r27, r27
 718:	40 f4       	brcc	.+16     	; 0x72a <__fp_round+0x20>
 71a:	bf 2b       	or	r27, r31
 71c:	11 f4       	brne	.+4      	; 0x722 <__fp_round+0x18>
 71e:	60 ff       	sbrs	r22, 0
 720:	04 c0       	rjmp	.+8      	; 0x72a <__fp_round+0x20>
 722:	6f 5f       	subi	r22, 0xFF	; 255
 724:	7f 4f       	sbci	r23, 0xFF	; 255
 726:	8f 4f       	sbci	r24, 0xFF	; 255
 728:	9f 4f       	sbci	r25, 0xFF	; 255
 72a:	08 95       	ret

0000072c <_exit>:
 72c:	f8 94       	cli

0000072e <__stop_program>:
 72e:	ff cf       	rjmp	.-2      	; 0x72e <__stop_program>
